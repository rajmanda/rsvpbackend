name: Java CI with Maven and Docker

on:
  push:
    branches: [ "main", "feature/**" ]
    tags:                 # Trigger on tag push for releases
      - 'v*.*.*'
#  pull_request:
#    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SPRING_PROFILES_ACTIVE: dev

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4

      # Step 2: Set up JDK 17 for Maven build
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Step 3: Build the project using Maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

  docker:
    runs-on: ubuntu-latest
    needs: build  # This job depends on the build job
    steps:
      # Step 1: Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Build and push Docker image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rsvpbackend:${{ github.run_number }}
          platforms: linux/amd64,linux/arm64  # Specify the platforms you want to support
          build-args: |
            NODE_ENV=production
          progress: plain

#  update-manifest:
#    runs-on: ubuntu-latest
#    needs: docker  # This job depends on the docker job
#    steps:
#      # Step 1: Checkout the repository
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0  # Fetch all history for all branches and tags
#
#      # Step 2: Configure Git
#      - name: Configure Git
#        run: |
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#
#      # Step 3: Fetch latest changes and reset
#      - name: Fetch and reset
#        run: |
#          git fetch origin main
#          git reset --hard origin/main
#
#      # Step 4: Update the image in the deployment manifest
#      - name: Update Kubernetes manifest
#        run: |
#          sed -i "s|image: .*|image: ${{ secrets.DOCKERHUB_USERNAME }}/rsvpbackend:${{ github.run_number }}|" rsvpbackend-deployment.yaml
#
#      # Step 5: Commit and push changes
#      - name: Commit and push changes
#        run: |
#          git add rsvpbackend-deployment.yaml
#          git commit -m "Update Docker image to version ${{ github.run_number }}"
#          git push origin main
#
#        env:
#          GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}  # Use your new secret here
  update-manifest:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Grant write permissions for the contents of the repository
    needs: docker  # Let the docker image creation be complete before apply the kubernetes deployment in tf-gcp-wif repo

    steps:
      # Step 1: Checkout the current repository
      - uses: actions/checkout@v4

      - name: Update Kubernetes manifest
        run: |
          # Ensure we have the latest changes before modifying the file
          git fetch origin ${{ github.ref_name }}
          git checkout ${{ github.ref_name }}
          git pull origin ${{ github.ref_name }}
          
          # Update the image in the Kubernetes manifest
          sed -i "s|image: .*|image: ${{ secrets.DOCKERHUB_USERNAME }}/rsvpbackend:${{ github.run_number }}|" rsvpbackend-deployment.yaml
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Commit and push changes if any
          git add rsvpbackend-deployment.yaml
          git diff --staged --quiet || git commit -m "Update Docker image to latest version - ${{ github.run_number }} [skip ci]"
          
          # Push changes
          git push origin ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}  # Use your new secret here
      # Step 3: Checkout the tf-gcp-wif repository
      - name: Checkout tf-gcp-wif repo
        uses: actions/checkout@v3
        with:
          repository: rajmanda/tf-gcp-wif  # Your tf-gcp-wif repo
          ref: feature/deploy-kalyanam  # Checkout the target branch
          path: tf-gcp-wif  # Check out the repository in a subdirectory named tf-gcp-wif
          token: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}

      # Step 3: Debugging - List files to confirm presence of kalyanam-deployment.yaml
      - name: List files in current directory
        run: ls -al

      # Step 4: Copy the updated manifest to tf-gcp-wif/deploy
      # Step 4: Copy the updated manifest to tf-gcp-wif/deploy
      - name: Copy updated manifest to tf-gcp-wif/deploy
        run: |
          cp rsvpbackend-deployment.yaml tf-gcp-wif/deploy/rsvpbackend-deployment.yaml
          cd tf-gcp-wif  # Change directory to tf-gcp-wif
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add deploy/rsvpbackend-deployment.yaml
          git remote set-url origin https://x-access-token:${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}@github.com/rajmanda/tf-gcp-wif.git
          git commit -m "Copy updated rsvpbackend-deployment.yaml from kalyanam repo"
          git push origin HEAD:feature/deploy-kalyanam
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}  # Use your new secret here

