# Eureka is used for service discovery, allowing services to find and communicate with each other dynamically.
# Eureka is primarily designed for server-side service discovery
# Removing it as we don't need it and can save us some $$$

#eureka:
#  client:
#    service-url:
#      defaultZone: http://my-eureka-headless.eureka.svc.cluster.local:8761/eureka/
#    register-with-eureka: true
#    fetch-registry: true
#  instance:
#    prefer-ip-address: true
#    hostname: rsvpbackend
#    secure-port: 8443
#    secure-port-enabled: true
#    status-page-url: http://${eureka.instance.hostname}:${eureka.instance.non-secure-port}/actuator/info
#    health-check-url: http://${eureka.instance.hostname}:${eureka.instance.non-secure-port}/actuator/health

server:
  port: 8443

spring:
  data:
    mongodb:
      uri: ${SPRING_DATA_MONGODB_URI:mongodb+srv://galaDbUser:<password>@cluster0.sod5j.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0}
      passwordFilePath: ${MONGODB_PASSWORD_FILE:/etc/secrets/mongodb_password}

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SPRING_MAIL_USERNAME:raj.manda@gmail.com}
    password: ${SPRING_MAIL_PASSWORD:<password>}
    passwordFilePath: ${MAIL_PASSWORD_FILE:/etc/secrets/gmail_password}
    properties:
      mail:
        debug: true
        smtp:
          auth: true
          starttls:
            enable: true

# Actuator configuration for development
management:
  endpoints:
    web:
      exposure:
        include: "*"  # In development, we can expose all endpoints
  endpoint:
    health:
      show-details: always
